@page "/Account/Manage/ExternalLogins"
@using Microsoft.AspNetCore.Identity
@using BlazorApp2.Data

@namespace BlazorApp2

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IUserStore<ApplicationUser> UserStore
@inject IdentityRedirectManager RedirectManager

<PageTitle>Manage your external logins</PageTitle>

<StatusMessage/>
@if (_currentLogins?.Count > 0)
{
    <h3>Registered Logins</h3>
    <table class="table">
        <tbody>
        @foreach (var login in _currentLogins)
        {
            <tr>
                <td>@login.ProviderDisplayName</td>
                <td>
                    @if (_showRemoveButton)
                    {
                        <form @formname="@($"remove-login-{login.LoginProvider}")" @onsubmit="OnSubmitAsync" method="post">
                            <AntiforgeryToken/>
                            <div>
                                <input type="hidden" name="@nameof(LoginProvider)" value="@login.LoginProvider"/>
                                <input type="hidden" name="@nameof(ProviderKey)" value="@login.ProviderKey"/>
                                <button type="submit" class="btn btn-primary" title="Remove this @login.ProviderDisplayName login from your account">Remove</button>
                            </div>
                        </form>
                    }
                    else
                    {
                        @: &nbsp;
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}
@if (_otherLogins?.Count > 0)
{
    <h4>Add another service to log in.</h4>
    <hr/>
    <form class="form-horizontal" action="Account/Manage/LinkExternalLogin" method="post">
        <AntiforgeryToken/>
        <div>
            <p>
                @foreach (var provider in _otherLogins)
                {
                    <button type="submit" class="btn btn-primary" name="Provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
                        @provider.DisplayName
                    </button>
                }
            </p>
        </div>
    </form>
}

@code {


    // ReSharper disable once UnusedAutoPropertyAccessor.Local

}